@model IdentityV2.Presentation.Models.TaskPMVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MyTemplatepage.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "TaskPM", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TASKS</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

   

    
       




       
        <div class="staff-msg">
            <a onclick=show1() class="btn btn-primary">Choose a Project</a>
        </div>
        <div class="form-group" id="att" style="visibility: hidden">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", (SelectList)ViewData["ListProjects"])
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

      
 
        <div class="staff-msg">
            <a onclick=show() class="btn btn-primary">Choose a Member</a>
        </div>
        <br />

    </div>

  
    <div class="form-group" id="attri" style="visibility: hidden">

            @Html.LabelFor(model => model.User_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User_Id", (SelectList)ViewData["ListUsers"])
                @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary  btn-block" />
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
<script>

    function show1() {

        var x = document.getElementById('att');
        x.style.visibility = 'visible';     // Show

    }
 function show() {

                            var x = document.getElementById('attri');
                            x.style.visibility = 'visible';     // Show

                        }
</script>